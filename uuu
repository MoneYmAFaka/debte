-- Load UI Library (from your GitHub)
local Arrayfield
local success, result = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/MoneYmAFaka/debte/refs/heads/main/uuu"))()
end)

if not success then
    warn("Failed to load Arrayfield UI library: " .. tostring(result))
    return
end
Arrayfield = result

-- Initialize services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Safety check
if not LocalPlayer then
    warn("Player not found. Script aborted.")
    return
end

-- Toggle & Case control
local autoOpenEnabled = false
local selectedCase = "FreeCase"

-- Case opening loop
local function autoOpenLoop()
    task.spawn(function()
        while autoOpenEnabled do
            local args = { [1] = selectedCase }
            pcall(function()
                ReplicatedStorage:WaitForChild("OpenCrate", 9e9):InvokeServer(unpack(args))
            end)
            task.wait(6)
        end
    end)
end

-- Fix UI size issues
local function fixUISizeConstraints(window)
    for _, element in pairs(window:GetDescendants()) do
        if element:IsA("UISizeConstraint") then
            if element.MaxSize.X < element.MinSize.X or element.MaxSize.Y < element.MinSize.Y then
                element.MaxSize = Vector2.new(
                    math.max(element.MaxSize.X, element.MinSize.X),
                    math.max(element.MaxSize.Y, element.MinSize.Y)
                )
            end
        end
    end
end

-- Create UI Window
local Window = Arrayfield:CreateWindow({
    Name = "Auto Features Hub",
    LoadingTitle = "Loading Interface",
    LoadingSubtitle = "by xAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "AutoHub",
        FileName = "Config"
    }
})

-- Main Tab
local MainTab = Window:CreateTab("Main", 4483362458)
local MainSection = MainTab:CreateSection("Auto Case Opener", false)

-- Dropdown to select case
MainTab:CreateDropdown({
    Name = "Select Case",
    Options = {
        "FreeCase",
        "Snakebite",
        "Horizon",
        "WeaponCase1",
        "WeaponCase2",
        "eSports2013"
    },
    CurrentOption = "FreeCase",
    Flag = "CaseSelector",
    Callback = function(option)
        selectedCase = option
    end,
})

-- Toggle to start auto open
MainTab:CreateToggle({
    Name = "Auto Open Selected Case",
    Info = "Loops OpenCrate every 6 seconds for selected case.",
    CurrentValue = false,
    Flag = "AutoOpenCase",
    Callback = function(Value)
        autoOpenEnabled = Value
        if Value then
            autoOpenLoop()
        end
    end,
})

MainTab:CreateLabel("Auto Case Opener Ready!", MainSection)

-- Settings Tab
local SettingsTab = Window:CreateTab("Settings", 4483362458)
local SettingsSection = SettingsTab:CreateSection("UI Settings", false)

-- UI close key
local closeKey = Enum.KeyCode.E
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == closeKey then
        Window:Destroy()
    end
end)

SettingsTab:CreateInput({
    Name = "Close UI Key",
    Info = "Enter a key to close the UI (default: E).",
    PlaceholderText = "Enter Key",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        local key = Enum.KeyCode[Text:upper()]
        if key then
            closeKey = key
        end
    end,
})

-- Apply constraint fix
fixUISizeConstraints(Window)
