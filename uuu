local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()

local Window = Rayfield:CreateWindow({
    Name = "Case Opener GUI",
    LoadingTitle = "Arrayfield Interface Suite",
    LoadingSubtitle = "by Arrays",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "CaseOpenerConfig"
    },
    KeySystem = false, -- DISABLED
})

local Tab = Window:CreateTab("Main", 4483362458)

local Section = Tab:CreateSection("Case Functions", false)

-- Auto Open Case
local autoOpen = false
Tab:CreateToggle({
    Name = "Auto Open Case",
    Info = "Automatically opens a case every 8 seconds.",
    CurrentValue = false,
    Callback = function(Value)
        autoOpen = Value
        task.spawn(function()
            while autoOpen do
                local success, err = pcall(function()
                    local args = {
                        [1] = "OpenCase",
                        [2] = "Free Case",
                        [3] = 1,
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes", 9e9)
                        :WaitForChild("MainEvent", 9e9):FireServer(unpack(args))
                end)
                if not success then
                    warn("[Auto Open Error]:", err)
                end
                task.wait(8)
            end
        end)
    end,
})

-- Auto Sell Item
local autoSell = false
Tab:CreateToggle({
    Name = "Auto Sell Items",
    Info = "Automatically triggers the sell event every 8 seconds.",
    CurrentValue = false,
    Callback = function(Value)
        autoSell = Value
        task.spawn(function()
            while autoSell do
                local success, err = pcall(function()
                    local args = {
                        [1] = "SellItem"
                        -- Item details removed as per request
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes", 9e9)
                        :WaitForChild("MainEvent", 9e9):FireServer(unpack(args))
                end)
                if not success then
                    warn("[Auto Sell Error]:", err)
                end
                task.wait(8)
            end
        end)
    end,
})

-- Anti-AFK
local antiAfk = false
Tab:CreateToggle({
    Name = "Anti-AFK",
    Info = "Prevents you from getting kicked for inactivity.",
    CurrentValue = false,
    Callback = function(Value)
        antiAfk = Value
        if antiAfk then
            local vu = game:GetService("VirtualUser")
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            end)
        end
    end,
})
