-- Load UI Library
local Arrayfield
local success, result = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/MoneYmAFaka/debte/refs/heads/main/uuu"))()
end)

if not success then
    warn("Failed to load Arrayfield UI library: " .. tostring(result))
    return
end
Arrayfield = result

-- Initialize services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

if not LocalPlayer then
    warn("Player not found. Script aborted.")
    return
end

-- Toggles
local autoTapEnabled = false
local autoUpgradeEnabled = false
local autoRebirthEnabled = false

-- Auto Tap loop
local function autoTapLoop()
    task.spawn(function()
        while autoTapEnabled do
            pcall(function()
                ReplicatedStorage:WaitForChild("Remotes", 9e9):WaitForChild("Clicker", 9e9):FireServer()
            end)
            task.wait() -- very fast
        end
    end)
end

-- Auto Upgrade loop (all 4 upgrades)
local function autoUpgradeLoop()
    task.spawn(function()
        while autoUpgradeEnabled do
            for i = 1, 4 do
                local args = { [1] = tostring(i) }
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes", 9e9):WaitForChild("GemUpgrade", 9e9):FireServer(unpack(args))
                end)
                task.wait(0.15) -- small delay between upgrades
            end
        end
    end)
end

-- Auto Rebirth loop
local function autoRebirthLoop()
    task.spawn(function()
        while autoRebirthEnabled do
            local args = { [1] = 1 }
            pcall(function()
                ReplicatedStorage:WaitForChild("Remotes", 9e9):WaitForChild("Rebirth", 9e9):FireServer(unpack(args))
            end)
            task.wait(1) -- avoid excessive spam
        end
    end)
end

-- Fix UI constraints
local function fixUISizeConstraints(window)
    for _, element in pairs(window:GetDescendants()) do
        if element:IsA("UISizeConstraint") then
            if element.MaxSize.X < element.MinSize.X or element.MaxSize.Y < element.MinSize.Y then
                element.MaxSize = Vector2.new(
                    math.max(element.MaxSize.X, element.MinSize.X),
                    math.max(element.MaxSize.Y, element.MinSize.Y)
                )
            end
        end
    end
end

-- UI Setup
local Window = Arrayfield:CreateWindow({
    Name = "Auto Features Hub",
    LoadingTitle = "Loading Interface",
    LoadingSubtitle = "by xAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "AutoHub",
        FileName = "Config"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)

-- Auto Tap
MainTab:CreateToggle({
    Name = "Auto Tap",
    CurrentValue = false,
    Flag = "AutoTap",
    Callback = function(Value)
        autoTapEnabled = Value
        if Value then
            autoTapLoop()
        end
    end,
})

-- Auto Upgrade (all 4)
MainTab:CreateToggle({
    Name = "Auto Upgrade (All Upgrades)",
    CurrentValue = false,
    Flag = "AutoUpgrade",
    Callback = function(Value)
        autoUpgradeEnabled = Value
        if Value then
            autoUpgradeLoop()
        end
    end,
})

-- Auto Rebirth
MainTab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(Value)
        autoRebirthEnabled = Value
        if Value then
            autoRebirthLoop()
        end
    end,
})

-- Settings tab
local SettingsTab = Window:CreateTab("Settings", 4483362458)
local closeKey = Enum.KeyCode.E
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == closeKey then
        Window:Destroy()
    end
end)

SettingsTab:CreateInput({
    Name = "Close UI Key",
    Info = "Enter a key to close the UI (default: E).",
    PlaceholderText = "Enter Key",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        local key = Enum.KeyCode[Text:upper()]
        if key then
            closeKey = key
        end
    end,
})

fixUISizeConstraints(Window)
