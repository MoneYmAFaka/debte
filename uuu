-- Load Arrayfield UI library with error handling
local Arrayfield
local success, result = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua"))()
end)

if not success then
    warn("Failed to load Arrayfield UI library: " .. tostring(result))
    return
end
Arrayfield = success and result or nil

-- Initialize services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

-- Auto Tap variables
local autoTapEnabled = false
local autoTapDelay = 0.03 -- ~33 clicks per second

local function autoTapLoop()
    task.spawn(function()
        while autoTapEnabled do
            local args = {}
            pcall(function()
                game:GetService("ReplicatedStorage")
                    :WaitForChild("Events", 9e9)
                    :WaitForChild("Click", 9e9)
                    :FireServer(unpack(args))
            end)
            task.wait(autoTapDelay)
        end
    end)
end

-- Auto Rebirth variables
local autoRebirthEnabled = false
local rebirthAmount = 1 -- default amount

local function autoRebirthLoop()
    task.spawn(function()
        while autoRebirthEnabled do
            local args = {
                [1] = rebirthAmount
            }
            pcall(function()
                game:GetService("ReplicatedStorage")
                    :WaitForChild("Events", 9e9)
                    :WaitForChild("Rebirth", 9e9)
                    :InvokeServer(unpack(args))
            end)
            task.wait(1) -- adjust delay if needed
        end
    end)
end

-- Create UI
local Window = Arrayfield:CreateWindow({
    Name = "Auto Features Hub",
    LoadingTitle = "Loading Interface",
    LoadingSubtitle = "by xAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "AutoHub",
        FileName = "Config"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)

-- Auto Tap Toggle
MainTab:CreateToggle({
    Name = "Auto Click",
    Info = "Loops Events.Click",
    CurrentValue = false,
    Flag = "AutoClick",
    Callback = function(Value)
        autoTapEnabled = Value
        if Value then
            autoTapLoop()
        end
    end,
})

-- Auto Rebirth Toggle
MainTab:CreateToggle({
    Name = "Auto Rebirth",
    Info = "Automatically invokes rebirths by input amount",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(Value)
        autoRebirthEnabled = Value
        if Value then
            autoRebirthLoop()
        end
    end,
})

-- Input box for rebirth amount
MainTab:CreateInput({
    Name = "Rebirth Amount",
    Info = "Enter number of rebirths per loop (e.g., 1, 5, 10, 100)",
    PlaceholderText = "1",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        local num = tonumber(Text)
        if num and num > 0 then
            rebirthAmount = num
        else
            warn("Invalid rebirth amount, using previous value: " .. tostring(rebirthAmount))
        end
    end,
})

-- UI Close Hotkey (default: E)
local closeKey = Enum.KeyCode.E
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == closeKey then
        Window:Destroy()
    end
end)

MainTab:CreateLabel("Auto Click and Auto Rebirth ready.")
