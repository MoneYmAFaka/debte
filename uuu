-- Load Arrayfield UI library
local function loadArrayfield(maxRetries, delay)
    local url = "https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua"
    local attempt = 1
    local success, result

    while attempt <= maxRetries do
        success, result = pcall(function()
            return game:HttpGet(url)
        end)
        if success then
            local loaded, Arrayfield = pcall(loadstring(result))
            if loaded and Arrayfield then
                return true, Arrayfield
            end
        end
        task.wait(delay)
        attempt = attempt + 1
    end
    return false, "Failed to load UI library."
end

local success, Arrayfield = loadArrayfield(3, 2)
if not success then
    warn(Arrayfield)
    return
end

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Remotes = ReplicatedStorage:FindFirstChild("Remotes")

if not Remotes then
    warn("Remotes not found!")
    return
end

-- Toggles
local autoClaimEnabled = false
local instantRollEnabled = false
local autoRankEnabled = false
local autoIndexEnabled = false
local autoRebirthEnabled = false

-- Function to safely fire server events
local function safeFireServer(remoteName, args)
    local remote = Remotes:FindFirstChild(remoteName)
    if remote then
        pcall(function()
            remote:FireServer(unpack(args))
        end)
    else
        warn("Remote " .. remoteName .. " not found.")
    end
end

-- Auto Claim Battlepass (1 min)
task.spawn(function()
    while true do
        if autoClaimEnabled then
            safeFireServer("Battlepass", { "Claim", "All" })
        end
        task.wait(60)
    end
end)

-- Instant Roll (20 min)
task.spawn(function()
    while true do
        if instantRollEnabled then
            safeFireServer("RollEvent", { "InstantBonus" })
        end
        task.wait(1200)
    end
end)

-- Auto Rank (1 min)
task.spawn(function()
    while true do
        if autoRankEnabled then
            safeFireServer("Ranked", {})
        end
        task.wait(60)
    end
end)

-- Auto Index (5 min)
task.spawn(function()
    while true do
        if autoIndexEnabled then
            safeFireServer("Index", { "AutoCollect" })
        end
        task.wait(300)
    end
end)

-- Auto Rebirth (3 min)
task.spawn(function()
    while true do
        if autoRebirthEnabled then
            safeFireServer("Rebirth", { "Auto" })
        end
        task.wait(180)
    end
end)

-- Create UI
local Window = Arrayfield:CreateWindow({
    Name = "Auto Features Hub",
    LoadingTitle = "Loading UI",
    LoadingSubtitle = "by xAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "AutoHub",
        FileName = "Config"
    }
})

-- **Main Tab**
local MainTab = Window:CreateTab("Main", 4483362458)
local MainSection = MainTab:CreateSection("Auto Features")

-- Auto Claim Battlepass
MainTab:CreateToggle({
    Name = "Auto Claim Battlepass (1 min)",
    CurrentValue = false,
    Flag = "AutoClaim",
    Callback = function(Value)
        autoClaimEnabled = Value
    end,
})

-- Instant Roll
MainTab:CreateToggle({
    Name = "Instant Roll (20 min)",
    CurrentValue = false,
    Flag = "InstantRoll",
    Callback = function(Value)
        instantRollEnabled = Value
    end,
})

-- Auto Rank
MainTab:CreateToggle({
    Name = "Auto Rank (1 min)",
    CurrentValue = false,
    Flag = "AutoRank",
    Callback = function(Value)
        autoRankEnabled = Value
    end,
})

-- **Auto Index (Now Appearing in UI!)**
MainTab:CreateToggle({
    Name = "Auto Index (5 min)",
    CurrentValue = false,
    Flag = "AutoIndex",
    Callback = function(Value)
        autoIndexEnabled = Value
    end,
})

-- **Auto Rebirth (Now Appearing in UI!)**
MainTab:CreateToggle({
    Name = "Auto Rebirth (3 min)",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(Value)
        autoRebirthEnabled = Value
    end,
})

-- **Settings Tab**
local SettingsTab = Window:CreateTab("Settings", 4483362458)
SettingsTab:CreateSection("UI Settings")

-- Close UI Keybind
SettingsTab:CreateInput({
    Name = "Close UI Key",
    PlaceholderText = "Enter Key (e.g., Q)",
    Callback = function(Text)
        local key = Enum.KeyCode[Text:upper()]
        if key then
            game:GetService("UserInputService").InputBegan:Connect(function(input)
                if input.KeyCode == key then
                    Window:Destroy()
                    print("UI closed with key: " .. Text)
                end
            end)
        else
            warn("Invalid key: " .. Text)
        end
    end,
})

MainTab:CreateLabel("Auto Features Loaded!", MainSection)
