-- Ensure Rayfield is loaded safely
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
end)
if not success then
    warn("Failed to load Rayfield UI library.")
    return
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)

-- Variables to control toggles
local autoClaimEnabled = false
local autoRebirthEnabled = false
local autoIndexEnabled = false
local autoPotionEnabled = false
local selectedPotion = "Lucky Potion II"
local potionAmount = 1

-- Randomized delay function to mimic human behavior
local function randomDelay(min, max)
    return task.wait(min + math.random() * (max - min))
end

-- Safe FireServer with cooldown
local function safeFireServer(remote, args, minDelay, maxDelay)
    task.spawn(function()
        while true do
            if not remote:IsDescendantOf(ReplicatedStorage) then break end
            pcall(function()
                remote:FireServer(unpack(args))
            end)
            randomDelay(minDelay, maxDelay) -- Randomized delay to avoid detection
        end
    end)
end

-- Auto Claim Function
local function autoClaim()
    task.spawn(function()
        while autoClaimEnabled do
            local args = { [1] = "Claim", [2] = "All" }
            pcall(function()
                Remotes:WaitForChild("Battlepass", 9e9):FireServer(unpack(args))
            end)
            randomDelay(5, 7) -- Randomized 5-7s delay
        end
    end)
end

-- Auto Rebirth Function
local function autoRebirth()
    task.spawn(function()
        while autoRebirthEnabled do
            local args = {}
            pcall(function()
                Remotes:WaitForChild("Rebirth", 9e9):FireServer(unpack(args))
            end)
            randomDelay(5, 7) -- Randomized 5-7s delay
        end
    end)
end

-- Auto Index Function
local function autoIndex()
    task.spawn(function()
        while autoIndexEnabled do
            local args = {}
            pcall(function()
                Remotes:WaitForChild("ClaimIndex", 9e9):FireServer(unpack(args))
            end)
            randomDelay(5, 7) -- Randomized 5-7s delay
        end
    end)
end

-- Auto Potion Function
local function autoPotion()
    task.spawn(function()
        while autoPotionEnabled do
            local args = { [1] = selectedPotion, [2] = false, [3] = potionAmount }
            pcall(function()
                Remotes:WaitForChild("PotionCraft", 9e9):FireServer(unpack(args))
            end)
            randomDelay(10, 15) -- Slower randomized 10-15s delay for purchases
        end
    end)
end

-- Create UI
local Window = Rayfield:CreateWindow({
    Name = "Safe Auto Hub",
    LoadingTitle = "Loading Interface",
    LoadingSubtitle = "by xAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "SafeAutoHub",
        FileName = "Config"
    }
})

-- Main Tab
local MainTab = Window:CreateTab("Main", 4483362458)
MainTab:CreateSection("Auto Features")

-- Auto Claim Toggle
MainTab:CreateToggle({
    Name = "Auto Claim Battlepass",
    CurrentValue = false,
    Flag = "AutoClaim",
    Callback = function(Value)
        autoClaimEnabled = Value
        if Value then autoClaim() end
    end
})

-- Auto Rebirth Toggle
MainTab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(Value)
        autoRebirthEnabled = Value
        if Value then autoRebirth() end
    end
})

-- Auto Index Toggle
MainTab:CreateToggle({
    Name = "Auto Claim Index",
    CurrentValue = false,
    Flag = "AutoIndex",
    Callback = function(Value)
        autoIndexEnabled = Value
        if Value then autoIndex() end
    end
})

-- Auto Potion Toggle
MainTab:CreateToggle({
    Name = "Auto Buy Potion",
    CurrentValue = false,
    Flag = "AutoPotion",
    Callback = function(Value)
        autoPotionEnabled = Value
        if Value then autoPotion() end
    end
})

-- Potion Selection Dropdown
MainTab:CreateDropdown({
    Name = "Select Potion",
    Options = {"Lucky Potion II", "Speed Potion II"},
    CurrentOption = "Lucky Potion II",
    Flag = "PotionType",
    Callback = function(Option)
        selectedPotion = Option
    end
})

-- Potion Amount Slider
MainTab:CreateSlider({
    Name = "Potion Amount",
    Range = {1, 5}, -- Reduced max to 5 to avoid suspicion
    Increment = 1,
    Suffix = "Potions",
    CurrentValue = 1,
    Flag = "PotionAmount",
    Callback = function(Value)
        potionAmount = Value
    end
})

-- Settings Tab
local SettingsTab = Window:CreateTab("Settings", 4483362458)
SettingsTab:CreateSection("UI Settings")

-- Close Keybind
SettingsTab:CreateInput({
    Name = "Close UI Key",
    PlaceholderText = "Enter Key (e.g., Q)",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        local key = Enum.KeyCode[Text:upper()]
        if key then
            game:GetService("UserInputService").InputBegan:Connect(function(input)
                if input.KeyCode == key then
                    Rayfield:Destroy()
                end
            end)
        end
    end
})

-- Notification
Rayfield:Notify({
    Title = "Safe Auto Features Loaded",
    Content = "Features are running with anti-ban protection!",
    Duration = 5,
    Image = 4483362458,
    Actions = {
        Ignore = {
            Name = "OK",
            Callback = function() end
        }
    }
})
